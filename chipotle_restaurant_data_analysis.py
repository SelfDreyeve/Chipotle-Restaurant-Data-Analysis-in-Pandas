# -*- coding: utf-8 -*-
"""Chipotle Restaurant Data Analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tANXU6aFVtrX0qUFjccS3PeF3ketZOLe

# Chipotle Restaurant Data Analysis

In this analysis I'm going to answer the following questions: 1) What is the general distribution of the total order value? What does a typical order cost?

2) What are some typical combinations in most orders. This can tell us if Chipotle should create meals so that the customer can just point to meal 1 (chips, burrito, drink) or meal 2, etc.

3) Given a specific item, what has been ordered most frequently with it? This can help create a digital ordering menu that makes it easy for a customer to select items as they choose the first item, they get shown the second item, etc, based on historical data.

Let's first import the necessary libraries. We'll be working mostly with pandas, but the other libraries will be helpful to visualize some data.
"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

#Let's read in the data - our dataset is in the form of a tsv file. To read it in we use pd.read_csv but specify sep='\t'
chipotle = pd.read_csv('/content/drive/MyDrive/chipotle.tsv.txt', sep='\t')

from google.colab import drive
drive.mount('/content/drive')

"""After loading the data into the program, it's always good to take a quick look at the data, to check if everything is fine. """

chipotle

"""We need to remove all '$' signs to be able to perform calculations on the data. I'm using `inplace=True` as I'd rather have it changed for the original dataset."""

# For the sake of simplicity let's call our dataframe df
df = chipotle
df.iloc[:, 4].replace("\$", "", inplace=True, regex=True)
df

"""The type of `item_price` is strings so I need to convert the values to numeric. I'm also creating a new column order_value to store the total amount spent per each order. Note thata each row is a seperate product, not the whole order."""

item_price = pd.to_numeric(df['item_price'])
quantity = pd.to_numeric(df['quantity'])
df['order_value'] = quantity* item_price
df[:30]

"""To see the total value of each order I group the data by `order_id` and sum the values."""

grouped = df.groupby(['order_id']).sum()

"""Calcualting the average value of an order. I'm using both mean and median here to see if there is much difference and see if there are many outliers."""

df.order_value.mean()

df.order_value.median()

"""# General Distribution of the Order Values"""

plt.figure(figsize=(10,6))
sns.distplot(grouped)
plt.xlabel("Order Value")
plt.ylabel("Frequency")
plt.title("General Distribution of the Order Value", size=24)

"""We can see that the data is skewed by some outliers. To have a better picture, let's drop this value and visualise it again."""

#Looking for an outlier
sorted = df.sort_values('order_value', ascending=False)
print(sorted)

#Dropping the outlier
data = df.drop([df.index[3598]])
data = data.groupby(['order_id']).sum()

import seaborn as sns
import matplotlib.pyplot as plt
plt.figure(figsize=(10,6))
sns.distplot(data)
plt.xlabel("Order Value")
plt.ylabel("Frequency")
plt.title("General Distribution of the Order Value", size=24)

"""# Finding the most common picks and matches in the menu"""

common_match = df.groupby('order_id')['item_name'].unique().astype(str).value_counts()
common_match

"""# Finding the most common matches based on the first chosen item."""

df1 = df.reset_index()
df1 = df1.merge(df1, on='order_id').query('index_x > index_y')

df1 = pd.DataFrame(np.sort(df1[['item_name_x', 'item_name_y']].to_numpy(), axis=1))
matched = df1.groupby([*df1]).size().sort_values(ascending=False)
matched[:30]